/**
 * @file
 * Positioning for a responsive layout.
 *
 * Define CSS classes to create a fluid grid layout with optional sidebars
 * depending on whether blocks are placed in the left or right sidebars.
 *
 * This layout uses the Zen Grids plugin for Compass: http://zengrids.com
 */

// We are going to create a fluid grid with 1, 3, or 5 columns and 20px gutters
// between columns (applied as 10px of left/right padding on each column).
$zen-columns:  1 !global;
$zen-gutters:  10px;

// If you need IE6/7 support for box-sizing: border-box (default), see _base.scss
//$zen-box-sizing: content-box;

// You can generate more efficient CSS if you manually apply the
// zen-grid-item-base mixin to all grid items from within a single ruleset.
$zen-auto-include-grid-item-base: false;
// $zen-auto-include-flow-item-base: false;

// Suppress this section of CSS for RTL layouts since it contains no LTR-specific styles.
@if $zen-switch-direction == false {
  
/**
 * Center the page.
 *
 * For screen sizes larger than 1200px, prevent excessively long lines of text
 * by setting a max-width.
 */
#page {
  //@include zen-grid-background();
}
#page,
.region-bottom {
  margin-left: auto;
  margin-right: auto;
  max-width: 1200px;
}

/* Apply the shared properties of grid items in a single, efficient ruleset. */
#header,
#content,
#navigation,
.region-sidebar-first,
.region-sidebar-second,
#footer {
  // See the note about $zen-auto-include-grid-item-base above.
  @include zen-grid-item-base();
}

/* Containers for grid items and flow items. */
#header,
#main,
#footer {
  @include zen-grid-container();
}

/* Navigation bar */
@media all and (min-width: 480px) {
  #main {
    /* Move all the children of #main down to make room. */
    padding-top: $nav-height;
    position: relative;
  }
  #navigation {
    /* Move the navbar up inside #main's padding. */
    position: absolute;
    top: 0;
    height: $nav-height;
    width: $zen-grid-width;
  }
}

} // End of @if $zen-reverse-all-floats == true

/**
 * Use 3 grid columns for smaller screens.
 */
@media all and (min-width: 480px) and (max-width: 959px) {

  $zen-columns: 3;
#page {
  //@include zen-grid-background();
}

#header {
  h1 {
    //display: none;
    color: $white;
    font-size: 1em;
    line-height: 1em;
    margin: 0.5em 0;
  }
  h2 {
    //display: none;
    color: $white;
    font-size: .9em;
    line-height: 1em;
    margin: 0.5em 0;
    padding-left: 0.5em;
  }
  .block {
    margin: 0;
    p {
      margin: 0;
    }
  }
  #logo, #block-block-6, #block-block-1 {
    @include zen-grid-item(1, 1);
    color: $white;
    text-align: left;
    position: relative;
    margin-top: 1em;
    z-index: 99;
    p {
      padding-left: 0.5em;
    }
  }
  .region-header {
    @include zen-grid-item(3, 1);
  }
  #nice-menu-1 {
    //$zen-columns: 5;
    @include zen-grid-container($context: flow);
    @include zen-grid-item(4, 2, $columns: 5);
    //@include zen-grid-background();
  }
  li.menuparent:nth-child(1) {
    @include zen-grid-item(1, 1);
  }
  li.menuparent:nth-child(2) {
   @include zen-grid-item(1, 2);
  }
  li.menuparent:nth-child(3) {
    @include zen-grid-item(1, 3);
  }
  li.menuparent:nth-child(4) {
    @include zen-grid-item(1, 4);
  }
  li.menuparent:nth-child(5) {
    @include zen-grid-item(1, 5);
  }
  li.menuparent:nth-child(6) {
    @include zen-grid-item(1, 6);
  }
  li.menuparent:nth-child(7) {
    @include zen-grid-item(1, 7);
  }
}
#block-views-why-st-bernard-block {
  min-height: 280px;
}

  #content-bottom {
    $zen-columns: 3;
    margin-top: -0.5em;
    background: $lightergrey;
    //@include zen-grid-background();
    h2 {
      color: $grey;
      text-align: left;
      padding-left: 1em;
    }
    .block {
      background: $lightergrey;
      min-height: 300px;
    }
    .block:nth-child(1) {
      @include zen-grid-item(1, 1);
    }
    .block:nth-child(2) {
     @include zen-grid-item(1, 2);
    }
    .block:nth-child(3) {
      @include zen-grid-item(1, 3);
    }
    .block:nth-child(4) {
      @include zen-grid-item(1, 1);
    }
  }

  /**
   * The layout when there is only one sidebar, the left one.
   */
  .sidebar-first {
    $zen-columns: 3;
    /* Span 2 columns, starting in 2nd column from left. */
    #content {
      @include zen-grid-item(2, 2);
    }

    /* Span 1 column, starting in 1st column from left. */
    .region-sidebar-first {
      @include zen-grid-item(1, 1);
    }
  }

  /**
   * The layout when there is only one sidebar, the right one.
   */
  .sidebar-second {
    /* Span 2 columns, starting in 1st column from left. */
    #content {
      @include zen-grid-item(2, 1);
    }

    /* Span 1 column, starting in 3rd column from left. */
    .region-sidebar-second {
      @include zen-grid-item(1, 3);
    }
  }

  /**
   * The layout when there are two sidebars.
   */
  .two-sidebars {
    /* Span 2 columns, starting in 2nd column from left. */
    #content {
      @include zen-grid-item(2, 2);
    }

    /* Span 1 column, starting in 1st column from left. */
    .region-sidebar-first {
      @include zen-grid-item(1, 1);
    }

    /* Start a new row and span all 3 columns. */
    .region-sidebar-second {
      @include zen-grid-item(3, 1);
      @include zen-grid-container($context: flow); // Since we're making every block in this region be a grid item.
      @include zen-new-row();

      /* Apply the shared properties of grid items in a single, efficient ruleset. */
      .block {
        @include zen-grid-item-base();
      }
      /* Span 1 column, starting in the 1st column from left. */
      .block:nth-child(3n+1) {
        @include zen-grid-item(1, 1);
        @include zen-new-row();
      }
      /* Span 1 column, starting in the 2nd column from left. */
      .block:nth-child(3n+2) {
        @include zen-grid-item(1, 2);
      }
      /* Span 1 column, starting in the 3rd column from left. */
      .block:nth-child(3n) {
        @include zen-grid-item(1, 3);
      }
    }
  }
}

/**
 * Use 5 grid columns for larger screens.
 */
@media all and (min-width: 960px) {

  $zen-columns: 5;
  #page {
    //@include zen-grid-background();
  }
  #header {
    //@include zen-grid-background();
    h1 {
      //display: none;
      background: none repeat scroll 0 0 $darkblue;
      color: $lightblue;
      font-size: 1.75em;
      font-weight: normal;
      line-height: 1em;
      margin: 0;
      padding: 0.25em;
    }
    h2 {
      //display: none;
      color: $grey;
      font-size: 1em;
      font-weight: bold;
      line-height: 1.25em;
      margin: 0.5em 0;
      padding: 0 0.5em;
    }
    .block {
      color: $grey;
      margin: 0;
      p {
        line-height: 1.25em;
        margin: 0;
        padding: 0 0.5em;
      }
    }
    #logo {
      margin-right: -2.75em;
      img {
        border-left: 5px solid $darkblue;
      }
    }
    #block-block-6,#block-block-1, #block-block-8 {
      @include zen-grid-item(1, 1);
      position: relative;
      margin-top: 0;
      z-index: 10;
    }
    #block-block-6 {
      background: none repeat scroll 0 0 $blue;
      h2 {
        //display: none;
        background: none repeat scroll 0 0 $darkblue;
        color: $lightblue;
        font-size: 1.75em;
        font-weight: normal;
        line-height: 1em;
        margin: 0;
        padding: 0.25em;
      }
    }
    #block-block-8 {
      @include zen-new-row();
      background: none repeat scroll 0 0 $yellow;
    }
    #name-and-slogan {
      @include zen-grid-item(1, 1);
      position: relative;
      top: 175px;
    }
    .region-header {
      @include zen-grid-item(5, 1);
    }
    #nice-menu-1 {
      //$zen-columns: 5;
      @include zen-grid-container($context: flow);
      @include zen-grid-item(4, 2, left, $columns: 5);
      //@include zen-grid-background();
    }
    li.menuparent:nth-child(1) {
      @include zen-grid-item(1, 1);
    }
    li.menuparent:nth-child(2) {
     @include zen-grid-item(1, 2);
    }
    li.menuparent:nth-child(3) {
      @include zen-grid-item(1, 3);
    }
    li.menuparent:nth-child(4) {
      @include zen-grid-item(1, 4);
    }
    li.menuparent:nth-child(5) {
      @include zen-grid-item(1, 5);
    }
    li.menuparent:nth-child(6) {
      @include zen-grid-item(1, 6);
    }
    li.menuparent:nth-child(7) {
      @include zen-grid-item(1, 7);
    }
  }
  #block-views-why-st-bernard-block {
    min-height: 260px;
  }
  #content-bottom {
    $zen-columns: 3;
    margin-top: -1.25em;
    background: $lightergrey;
    //@include zen-grid-background();
    h2 {
      color: $grey;
      text-align: left;
      padding-left: 1em;
    }
    .block {
      background: $lightergrey;
      min-height: 250px;
    }
    .block:nth-child(1) {
      @include zen-grid-item(1, 1);
    }
    .block:nth-child(2) {
     @include zen-grid-item(1, 2);
    }
    .block:nth-child(3) {
      @include zen-grid-item(1, 3);
    }
    .block:nth-child(4) {
      @include zen-grid-item(1, 1);
    }
  }
  /**
   * The layout when there is only one sidebar, the left one.
   */
  .sidebar-first {
    /* Span 4 columns, starting in 2nd column from left. */
   $zen-columns: 5;
    #content {
      @include zen-grid-item(4, 2);
    }

    /* Span 1 column, starting in 1st column from left. */
    .region-sidebar-first {
      @include zen-grid-item(1, 1);
    }
  }

  /**
   * The layout when there is only one sidebar, the right one.
   */
  .sidebar-second {
    /* Span 4 columns, starting in 1st column from left. */
    #content {
      @include zen-grid-item(4, 1);
    }

    /* Span 1 column, starting in 5th column from left. */
    .region-sidebar-second {
      @include zen-grid-item(1, 5);
    }
  }

  /**
   * The layout when there are two sidebars.
   */
  .two-sidebars {
    /* Span 3 columns, starting in 2nd column from left. */
    #content {
      @include zen-grid-item(3, 2);
    }

    /* Span 1 column, starting in 1st column from left. */
    .region-sidebar-first {
      @include zen-grid-item(1, 1);
    }

    /* Span 1 column, starting in 5th column from left. */
    .region-sidebar-second {
      @include zen-grid-item(1, 5);
    }
  }
}
